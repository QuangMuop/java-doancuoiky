/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelTimPhong.java
 *
 * Created on Dec 18, 2009, 11:48:53 AM
 */

package client;

import BUS.PhongController;
import DTO.LoaiPhong;
import DTO.TinhTrangPhong;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;

/**
 *
 * @author huy
 */
public class JPanelTimPhong extends javax.swing.JPanel {

    /** Creates new form JPanelTimPhong */
    public JPanelTimPhong() {
        initComponents();
        
        phongController = new PhongController();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jCheckMaPhong1 = new javax.swing.JCheckBox();
        jLabelMaPhong1 = new javax.swing.JLabel();
        jCheckLoaiPhong1 = new javax.swing.JCheckBox();
        jLabelLoaiPhong1 = new javax.swing.JLabel();
        jCbLoaiPhong = new javax.swing.JComboBox();
        jCheckTinhTrang1 = new javax.swing.JCheckBox();
        jLabelTinhTrang1 = new javax.swing.JLabel();
        jCbTinhTrang = new javax.swing.JComboBox();
        jBtnTimKiem1 = new javax.swing.JButton();
        imgSearch1 = new javax.swing.JLabel();
        jTxtMaPhong1 = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableResult1 = new javax.swing.JTable();
        bgLabel4 = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.GridLayout(1, 1));

        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel7.setAutoscrolls(true);
        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setOpaque(false);
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jCheckMaPhong1.setSelected(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(client.ClientApp.class).getContext().getResourceMap(JPanelTimPhong.class);
        jCheckMaPhong1.setText(resourceMap.getString("jCheckMaPhong1.text")); // NOI18N
        jCheckMaPhong1.setName("jCheckMaPhong1"); // NOI18N
        jCheckMaPhong1.setOpaque(false);
        jCheckMaPhong1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckMaPhong1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jCheckMaPhong1, gridBagConstraints);

        jLabelMaPhong1.setText(resourceMap.getString("jLabelMaPhong1.text")); // NOI18N
        jLabelMaPhong1.setName("jLabelMaPhong1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jLabelMaPhong1, gridBagConstraints);

        jCheckLoaiPhong1.setText(resourceMap.getString("jCheckLoaiPhong1.text")); // NOI18N
        jCheckLoaiPhong1.setName("jCheckLoaiPhong1"); // NOI18N
        jCheckLoaiPhong1.setOpaque(false);
        jCheckLoaiPhong1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckLoaiPhong1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jCheckLoaiPhong1, gridBagConstraints);

        jLabelLoaiPhong1.setText(resourceMap.getString("jLabelLoaiPhong1.text")); // NOI18N
        jLabelLoaiPhong1.setEnabled(false);
        jLabelLoaiPhong1.setName("jLabelLoaiPhong1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jLabelLoaiPhong1, gridBagConstraints);

        jCbLoaiPhong.setBackground(resourceMap.getColor("jCbLoaiPhong.background")); // NOI18N
        jCbLoaiPhong.setEnabled(false);
        jCbLoaiPhong.setName("jCbLoaiPhong"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jCbLoaiPhong, gridBagConstraints);

        jCheckTinhTrang1.setText(resourceMap.getString("jCheckTinhTrang1.text")); // NOI18N
        jCheckTinhTrang1.setName("jCheckTinhTrang1"); // NOI18N
        jCheckTinhTrang1.setOpaque(false);
        jCheckTinhTrang1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckTinhTrang1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jCheckTinhTrang1, gridBagConstraints);

        jLabelTinhTrang1.setText(resourceMap.getString("jLabelTinhTrang1.text")); // NOI18N
        jLabelTinhTrang1.setEnabled(false);
        jLabelTinhTrang1.setName("jLabelTinhTrang1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jLabelTinhTrang1, gridBagConstraints);

        jCbTinhTrang.setBackground(resourceMap.getColor("jCbTinhTrang.background")); // NOI18N
        jCbTinhTrang.setEnabled(false);
        jCbTinhTrang.setName("jCbTinhTrang"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jCbTinhTrang, gridBagConstraints);

        jBtnTimKiem1.setText(resourceMap.getString("jBtnTimKiem1.text")); // NOI18N
        jBtnTimKiem1.setName("jBtnTimKiem1"); // NOI18N
        jBtnTimKiem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jBtnTimKiem1MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(20, 8, 8, 8);
        jPanel7.add(jBtnTimKiem1, gridBagConstraints);

        imgSearch1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgSearch1.setName("imgSearch1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        jPanel7.add(imgSearch1, gridBagConstraints);

        jTxtMaPhong1.setBackground(resourceMap.getColor("jTxtMaPhong1.background")); // NOI18N
        jTxtMaPhong1.setColumns(15);
        jTxtMaPhong1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        jTxtMaPhong1.setName("jTxtMaPhong1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel7.add(jTxtMaPhong1, gridBagConstraints);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel7.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setMaximumSize(new java.awt.Dimension(78, 7));
        jLabel4.setMinimumSize(new java.awt.Dimension(78, 7));
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 0);
        jPanel7.add(jLabel4, gridBagConstraints);

        jScrollPane2.setName("jScrollPane2"); // NOI18N
        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 150));

        jTableResult1.setAutoCreateRowSorter(true);
        jTableResult1.setBackground(resourceMap.getColor("jTableResult1.background")); // NOI18N
        jTableResult1.setBorder(new javax.swing.border.MatteBorder(null));
        jTableResult1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", null, ""},
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ma phong", "Loai phong", "Don gia", "Tinh trang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableResult1.setToolTipText(resourceMap.getString("jTableResult1.toolTipText")); // NOI18N
        jTableResult1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableResult1.setCellSelectionEnabled(true);
        jTableResult1.setDoubleBuffered(true);
        jTableResult1.setName("jTableResult1"); // NOI18N
        jScrollPane2.setViewportView(jTableResult1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel7.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jPanel7, gridBagConstraints);

        bgLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgLabel4.setIcon(resourceMap.getIcon("bgLabel4.icon")); // NOI18N
        bgLabel4.setName("bgLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(bgLabel4, gridBagConstraints);

        add(jPanel6);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        int i;

        //get ds loai phong
        WorkerGetListLoaiPhong worker = new WorkerGetListLoaiPhong();
        worker.execute();
        try {
            lstLoaiPhong = worker.get();
        } catch (InterruptedException ex) {
            Logger.getLogger(JPanelTimPhong.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(JPanelTimPhong.class.getName()).log(Level.SEVERE, null, ex);
        }
        //lstLoaiPhong = phongController.getDSLoaiPhong();
        if(lstLoaiPhong!=null)
        {
            jCbLoaiPhong.removeAllItems();

            for(i=0;i<lstLoaiPhong.size();i++)
            {
                jCbLoaiPhong.addItem(lstLoaiPhong.get(i).getTen());
            }
        }

        //get ds tinh trang phong
        WorkerGetListTinhTrangPhong workerTinhTrangPhong = new WorkerGetListTinhTrangPhong();
        workerTinhTrangPhong.execute();
        try {
            lstTinhTrangPhong = workerTinhTrangPhong.get();
        } catch (InterruptedException ex) {
            Logger.getLogger(JPanelTimPhong.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(JPanelTimPhong.class.getName()).log(Level.SEVERE, null, ex);
        }
        //lstTinhTrangPhong = phongController.getDSTinhTrangPhong();
        if(lstTinhTrangPhong!=null)
        {
            jCbTinhTrang.removeAllItems();

            for(i=0;i<lstTinhTrangPhong.size();i++)
            {
                jCbTinhTrang.addItem(lstTinhTrangPhong.get(i).getTen());
            }
        }
    }//GEN-LAST:event_formComponentShown

    private void jCheckMaPhong1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckMaPhong1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckMaPhong1ItemStateChanged

    private void jCheckLoaiPhong1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckLoaiPhong1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckLoaiPhong1ItemStateChanged

    private void jCheckTinhTrang1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckTinhTrang1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckTinhTrang1ItemStateChanged

    private void jBtnTimKiem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnTimKiem1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnTimKiem1MousePressed
    
    private TinhTrangPhong timTinhTrangPhongTheoTen(String ten)
    {
        int i;
        for(i=0;i<lstTinhTrangPhong.size();i++)
        {
            if(lstTinhTrangPhong.get(i).getTen().equals(ten))
            {
                return lstTinhTrangPhong.get(i);
            }
        }
        return null;
    }

    private LoaiPhong timLoaiPhongTheoTen(String ten)
    {
        int i;
        for(i=0;i<lstLoaiPhong.size();i++)
        {
            if(lstLoaiPhong.get(i).getTen().equals(ten))
            {
                return lstLoaiPhong.get(i);
            }
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgLabel4;
    private javax.swing.JLabel imgSearch1;
    private javax.swing.JButton jBtnTimKiem1;
    private javax.swing.JComboBox jCbLoaiPhong;
    private javax.swing.JComboBox jCbTinhTrang;
    private javax.swing.JCheckBox jCheckLoaiPhong1;
    private javax.swing.JCheckBox jCheckMaPhong1;
    private javax.swing.JCheckBox jCheckTinhTrang1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelLoaiPhong1;
    private javax.swing.JLabel jLabelMaPhong1;
    private javax.swing.JLabel jLabelTinhTrang1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableResult1;
    private javax.swing.JFormattedTextField jTxtMaPhong1;
    // End of variables declaration//GEN-END:variables

    private PhongController phongController;
    private ArrayList<LoaiPhong> lstLoaiPhong;
    private ArrayList<TinhTrangPhong> lstTinhTrangPhong;
}

class WorkerGetListLoaiPhong extends SwingWorker<ArrayList<LoaiPhong>, Void>
{
    private PhongController phongController;

    @Override
    protected ArrayList<LoaiPhong> doInBackground() throws Exception {

        phongController = new PhongController();
        return phongController.getDSLoaiPhong();

    }

}

class WorkerGetListTinhTrangPhong extends SwingWorker<ArrayList<TinhTrangPhong>, Void>
{
    private PhongController phongController;

    @Override
    protected ArrayList<TinhTrangPhong> doInBackground() throws Exception {

        phongController = new PhongController();
        return phongController.getDSTinhTrangPhong();

    }

}
