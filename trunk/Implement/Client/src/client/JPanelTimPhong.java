/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelTimPhong.java
 *
 * Created on Dec 18, 2009, 11:48:53 AM
 */

package client;

import BUS.PhongController;
import DTO.LoaiPhong;
import DTO.Phong;
import DTO.TinhTrangPhong;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author huy
 */
public class JPanelTimPhong extends javax.swing.JPanel {

    /** Creates new form JPanelTimPhong */
    public JPanelTimPhong() {
        initComponents();

        phongController = new PhongController();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPaneTimPhong = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jCheckMaPhong = new javax.swing.JCheckBox();
        jLabelMaPhong = new javax.swing.JLabel();
        jCheckLoaiPhong = new javax.swing.JCheckBox();
        jLabelLoaiPhong = new javax.swing.JLabel();
        jCbLoaiPhong = new javax.swing.JComboBox();
        jCheckTinhTrang = new javax.swing.JCheckBox();
        jLabelTinhTrang = new javax.swing.JLabel();
        jCbTinhTrang = new javax.swing.JComboBox();
        jBtnTimKiem = new javax.swing.JButton();
        imgSearch = new javax.swing.JLabel();
        jTxtMaPhong = new javax.swing.JFormattedTextField();
        bgLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResult = new javax.swing.JTable();
        bgLabel3 = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.GridLayout(1, 1));

        jPaneTimPhong.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jPaneTimPhong.setName("jPaneTimPhong"); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new java.awt.GridLayout(1, 1));

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(client.ClientApp.class).getContext().getResourceMap(JPanelTimPhong.class);
        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(resourceMap.getIcon("jLabel3.icon")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setName("jLabel3"); // NOI18N
        jSplitPane1.setLeftComponent(jLabel3);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setAutoscrolls(true);
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jCheckMaPhong.setBackground(resourceMap.getColor("jCheckMaPhong.background")); // NOI18N
        jCheckMaPhong.setSelected(true);
        jCheckMaPhong.setText(resourceMap.getString("jCheckMaPhong.text")); // NOI18N
        jCheckMaPhong.setName("jCheckMaPhong"); // NOI18N
        jCheckMaPhong.setOpaque(false);
        jCheckMaPhong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckMaPhongItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jCheckMaPhong, gridBagConstraints);

        jLabelMaPhong.setText(resourceMap.getString("jLabelMaPhong.text")); // NOI18N
        jLabelMaPhong.setName("jLabelMaPhong"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jLabelMaPhong, gridBagConstraints);

        jCheckLoaiPhong.setText(resourceMap.getString("jCheckLoaiPhong.text")); // NOI18N
        jCheckLoaiPhong.setName("jCheckLoaiPhong"); // NOI18N
        jCheckLoaiPhong.setOpaque(false);
        jCheckLoaiPhong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckLoaiPhongItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jCheckLoaiPhong, gridBagConstraints);

        jLabelLoaiPhong.setText(resourceMap.getString("jLabelLoaiPhong.text")); // NOI18N
        jLabelLoaiPhong.setEnabled(false);
        jLabelLoaiPhong.setName("jLabelLoaiPhong"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jLabelLoaiPhong, gridBagConstraints);

        jCbLoaiPhong.setBackground(resourceMap.getColor("jCbLoaiPhong.background")); // NOI18N
        jCbLoaiPhong.setEnabled(false);
        jCbLoaiPhong.setName("jCbLoaiPhong"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jCbLoaiPhong, gridBagConstraints);

        jCheckTinhTrang.setText(resourceMap.getString("jCheckTinhTrang.text")); // NOI18N
        jCheckTinhTrang.setName("jCheckTinhTrang"); // NOI18N
        jCheckTinhTrang.setOpaque(false);
        jCheckTinhTrang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckTinhTrangItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jCheckTinhTrang, gridBagConstraints);

        jLabelTinhTrang.setText(resourceMap.getString("jLabelTinhTrang.text")); // NOI18N
        jLabelTinhTrang.setEnabled(false);
        jLabelTinhTrang.setName("jLabelTinhTrang"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jLabelTinhTrang, gridBagConstraints);

        jCbTinhTrang.setBackground(resourceMap.getColor("jCbLoaiPhong.background")); // NOI18N
        jCbTinhTrang.setEnabled(false);
        jCbTinhTrang.setName("jCbTinhTrang"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jCbTinhTrang, gridBagConstraints);

        jBtnTimKiem.setText(resourceMap.getString("jBtnTimKiem.text")); // NOI18N
        jBtnTimKiem.setName("jBtnTimKiem"); // NOI18N
        jBtnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jBtnTimKiemMousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(11, 8, 8, 8);
        jPanel2.add(jBtnTimKiem, gridBagConstraints);

        imgSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgSearch.setIcon(resourceMap.getIcon("imgSearch.icon")); // NOI18N
        imgSearch.setText(resourceMap.getString("imgSearch.text")); // NOI18N
        imgSearch.setName("imgSearch"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        jPanel2.add(imgSearch, gridBagConstraints);

        jTxtMaPhong.setBackground(resourceMap.getColor("jTxtMaPhong.background")); // NOI18N
        jTxtMaPhong.setColumns(15);
        jTxtMaPhong.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        jTxtMaPhong.setText(resourceMap.getString("jTxtMaPhong.text")); // NOI18N
        jTxtMaPhong.setName("jTxtMaPhong"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 8);
        jPanel2.add(jTxtMaPhong, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        bgLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgLabel2.setIcon(resourceMap.getIcon("bgLabel2.icon")); // NOI18N
        bgLabel2.setText(resourceMap.getString("bgLabel2.text")); // NOI18N
        bgLabel2.setName("bgLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(bgLabel2, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel1);

        jPanel4.add(jSplitPane1);

        jPaneTimPhong.setLeftComponent(jPanel4);

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(78, 7));
        jLabel1.setMinimumSize(new java.awt.Dimension(78, 7));
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTableResult.setAutoCreateRowSorter(true);
        jTableResult.setBackground(resourceMap.getColor("jTableResult.background")); // NOI18N
        jTableResult.setBorder(new javax.swing.border.MatteBorder(null));
        jTableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", null, ""},
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ma phong", "Loai phong", "Don gia", "Tinh trang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableResult.setToolTipText(resourceMap.getString("jTableResult.toolTipText")); // NOI18N
        jTableResult.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableResult.setCellSelectionEnabled(true);
        jTableResult.setDoubleBuffered(true);
        jTableResult.setName("jTableResult"); // NOI18N
        jScrollPane1.setViewportView(jTableResult);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(488, 488, 488))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel3, gridBagConstraints);

        bgLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgLabel3.setIcon(resourceMap.getIcon("bgLabel3.icon")); // NOI18N
        bgLabel3.setText(resourceMap.getString("bgLabel3.text")); // NOI18N
        bgLabel3.setName("bgLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(bgLabel3, gridBagConstraints);

        jPaneTimPhong.setRightComponent(jPanel5);

        add(jPaneTimPhong);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckLoaiPhongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckLoaiPhongItemStateChanged
        // TODO add your handling code here:
        if(jCheckLoaiPhong.isSelected())
        {
            jLabelLoaiPhong.setEnabled(true);
            jCbLoaiPhong.setEnabled(true);
        }
        else
        {
            jLabelLoaiPhong.setEnabled(false);
            jCbLoaiPhong.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckLoaiPhongItemStateChanged

    private void jCheckTinhTrangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckTinhTrangItemStateChanged
        // TODO add your handling code here:
        if(jCheckTinhTrang.isSelected())
        {
            jLabelTinhTrang.setEnabled(true);
            jCbTinhTrang.setEnabled(true);
        }
        else
        {
            jLabelTinhTrang.setEnabled(false);
            jCbTinhTrang.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckTinhTrangItemStateChanged

    private void jCheckMaPhongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckMaPhongItemStateChanged
        // TODO add your handling code here:
        if(jCheckMaPhong.isSelected())
        {
            jLabelMaPhong.setEnabled(true);
            jTxtMaPhong.setEnabled(true);
        }
        else
        {
            jLabelMaPhong.setEnabled(false);
            jTxtMaPhong.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckMaPhongItemStateChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        int i;

        //get ds loai phong
        lstLoaiPhong = phongController.getDSLoaiPhong();
        if(lstLoaiPhong!=null)
        {
            for(i=0;i<lstLoaiPhong.size();i++)
            {
                jCbLoaiPhong.addItem(lstLoaiPhong.get(i).getTen());
            }
        }

        //get ds tinh trang phong
        lstTinhTrangPhong = phongController.getDSTinhTrangPhong();
        if(lstTinhTrangPhong!=null)
        {
            for(i=0;i<lstTinhTrangPhong.size();i++)
            {
                jCbTinhTrang.addItem(lstTinhTrangPhong.get(i).getTen());
            }
        }
    }//GEN-LAST:event_formComponentShown

    private void jBtnTimKiemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnTimKiemMousePressed
        // TODO add your handling code here:
        try
        {
            String strId = jTxtMaPhong.getText();
            int id;
            if(!strId.equals("") && jTxtMaPhong.isEnabled())
                id = Integer.parseInt(strId);
            else
                id = -1;

            int idTinhTrang = -1;
            TinhTrangPhong tinhTrangPhong = null;
            if(jCbTinhTrang.isEnabled())
            {
                tinhTrangPhong = timTinhTrangPhongTheoTen((String)jCbTinhTrang.getSelectedItem());
                idTinhTrang = tinhTrangPhong.getId();
            }
            
            int idLoaiPhong = -1;
            LoaiPhong loaiPhong = null;
            if(jCbLoaiPhong.isEnabled())
            {
                loaiPhong = timLoaiPhongTheoTen((String)jCbLoaiPhong.getSelectedItem());
                idLoaiPhong = loaiPhong.getId();
            }

            ArrayList<Phong> lstPhong = phongController.timPhong(id, idLoaiPhong, idTinhTrang);
            if(lstPhong!=null)
            {
                DefaultTableModel model = (DefaultTableModel)jTableResult.getModel();
                clearTableData();

                int i;
                for(i=0;i<lstPhong.size();i++)
                {
                    Object[] arrObj = new Object[4];
                    arrObj[0] = lstPhong.get(i).getId();
                    arrObj[1] = lstPhong.get(i).getIdLoaiPhong().getTen();
                    arrObj[2] = lstPhong.get(i).getIdLoaiPhong().getGia();
                    arrObj[3] = lstPhong.get(i).getIdTinhTrang().getTen();

                    model.insertRow(i, arrObj);
                }                
            }
            else
            {
                JOptionPane.showConfirmDialog(jScrollPane1,"Khong tim thay ket qua", "Thong bao", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showConfirmDialog(this.getComponent(0),ex.getMessage() , "Thong bao loi", JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnTimKiemMousePressed

    private void clearTableData() {
        DefaultTableModel model = (DefaultTableModel)jTableResult.getModel();
        int i;
        for(i=0;i<model.getColumnCount();i++)
            model.removeRow(i);
    }

    private TinhTrangPhong timTinhTrangPhongTheoTen(String ten)
    {
        int i;
        for(i=0;i<lstTinhTrangPhong.size();i++)
        {
            if(lstTinhTrangPhong.get(i).getTen().equals(ten))
            {
                return lstTinhTrangPhong.get(i);
            }
        }
        return null;
    }

    private LoaiPhong timLoaiPhongTheoTen(String ten)
    {
        int i;
        for(i=0;i<lstLoaiPhong.size();i++)
        {
            if(lstLoaiPhong.get(i).getTen().equals(ten))
            {
                return lstLoaiPhong.get(i);
            }
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgLabel2;
    private javax.swing.JLabel bgLabel3;
    private javax.swing.JLabel imgSearch;
    private javax.swing.JButton jBtnTimKiem;
    private javax.swing.JComboBox jCbLoaiPhong;
    private javax.swing.JComboBox jCbTinhTrang;
    private javax.swing.JCheckBox jCheckLoaiPhong;
    private javax.swing.JCheckBox jCheckMaPhong;
    private javax.swing.JCheckBox jCheckTinhTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelLoaiPhong;
    private javax.swing.JLabel jLabelMaPhong;
    private javax.swing.JLabel jLabelTinhTrang;
    private javax.swing.JSplitPane jPaneTimPhong;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTableResult;
    private javax.swing.JFormattedTextField jTxtMaPhong;
    // End of variables declaration//GEN-END:variables

    private PhongController phongController;
    private ArrayList<LoaiPhong> lstLoaiPhong;
    private ArrayList<TinhTrangPhong> lstTinhTrangPhong;
}

class MyTableModel extends AbstractTableModel {
    private String[] columnNames = {"First Name",
                                    "Last Name",
                                    "Sport",
                                    "# of Years",
                                    "Vegetarian"};
    private Object[][] data = {
        {"Mary", "Campione",
         "Snowboarding", new Integer(5), new Boolean(false)},
        {"Alison", "Huml",
         "Rowing", new Integer(3), new Boolean(true)},
        {"Kathy", "Walrath",
         "Knitting", new Integer(2), new Boolean(false)},
        {"Sharon", "Zakhour",
         "Speed reading", new Integer(20), new Boolean(true)},
        {"Philip", "Milne",
         "Pool", new Integer(10), new Boolean(false)},
    };

    public int getColumnCount() {
        return columnNames.length;
    }

    public int getRowCount() {
        return data.length;
    }

    public String getColumnName(int col) {
        return columnNames[col];
    }

    public Object getValueAt(int row, int col) {
        return data[row][col];
    }

    /*
     * Don't need to implement this method unless your table's
     * data can change.
     */
    public void setValueAt(Object value, int row, int col) {
        data[row][col] = value;
        fireTableCellUpdated(row, col);
    }
}
